/usr/local/lib/python3.6/dist-packages/sklearn/externals/joblib/externals/loky/process_executor.py:706: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  "timeout or by a memory leak.", UserWarning
/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_search.py:841: DeprecationWarning: The default of the `iid` parameter will change from True to False in version 0.22 and will be removed in 0.24. This will change numeric results when test-set sizes are unequal.
  DeprecationWarning)
Restoring model weights from the end of the best epoch
Epoch 00103: early stopping
Best: -0.634990 using {'init_neurons': 16, 'learn': 0.1, 'n_layers': 3}
-8339.273803 (13616.277453) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 1}
-1002.254115 (1635.033320) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 2}
-0.634990 (0.463494) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 3}
-8.144056 (10.334343) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 4}
-10629.253201 (17355.985698) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 1}
-0.762498 (0.224476) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 2}
-0.692980 (0.428166) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 3}
-0.671374 (0.402458) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 4}
-7.057728 (9.963953) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 1}
-4.722993 (5.853645) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 2}
-0.845172 (0.113824) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 3}
-0.795610 (0.458426) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 4}
-13463.167581 (21983.447345) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 1}
-1383.673335 (2258.158027) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 2}
-17347.720004 (28286.786180) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 3}
-314.628754 (512.448632) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 4}
-3.319420 (4.202847) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 1}
-182.466372 (296.779935) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 2}
-0.780196 (0.266997) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 3}
-0.951403 (0.660273) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 4}
-0.836275 (0.233394) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 1}
-0.880571 (0.231183) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 2}
-0.897608 (0.420590) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 3}
-0.751407 (0.229842) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 4}
-34933.776421 (57045.317075) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 1}
-68356.220067 (111624.271356) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 2}
-63069.924862 (102988.462762) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 3}
-10357.701183 (16912.449874) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 4}
-1856.075560 (3029.608941) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 1}
-15.734531 (24.738343) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 2}
-1.197749 (0.267748) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 3}
-1.078609 (0.342608) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 4}
-1.057319 (0.242952) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 1}
-0.797326 (0.223013) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 2}
-0.719472 (0.332174) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 3}
-0.894561 (0.198696) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 4}
-106158.241285 (139059.425635) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 1}
-113652.207786 (185591.890783) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 2}
-96192.582016 (157080.920462) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 3}
-8258.855427 (13485.263862) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 4}
-9.702073 (14.602915) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 1}
-4.944303 (6.966849) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 2}
-0.860261 (0.258257) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 3}
-0.781631 (0.294218) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 4}
-1.236327 (0.336245) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 1}
-0.902342 (0.200150) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 2}
-0.858385 (0.170323) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 3}
-0.757340 (0.196415) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 4}
/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_search.py:841: DeprecationWarning: The default of the `iid` parameter will change from True to False in version 0.22 and will be removed in 0.24. This will change numeric results when test-set sizes are unequal.
  DeprecationWarning)
Restoring model weights from the end of the best epoch
Epoch 00204: early stopping
Best: -0.442422 using {'init_neurons': 64, 'learn': 0.1, 'n_layers': 2}
-0.706123 (0.506274) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 1}
-0.911052 (0.243409) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 2}
-0.617940 (0.473006) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 3}
-0.633207 (0.462029) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 4}
-0.656751 (0.458862) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 1}
-0.889230 (0.190794) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 2}
-1.359173 (0.223023) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 3}
-0.843778 (0.258177) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 4}
-0.991845 (0.020517) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 1}
-0.815324 (0.225972) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 2}
-1.072125 (0.060381) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 3}
-0.613108 (0.493467) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 4}
-3.361924 (4.404524) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 1}
-0.646922 (0.437175) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 2}
-0.611055 (0.455468) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 3}
-0.633348 (0.468926) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 4}
-0.976298 (0.248283) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 1}
-0.495639 (0.396979) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 2}
-1.229925 (0.507300) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 3}
-0.632674 (0.462963) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 4}
-1.013354 (0.117715) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 1}
-0.982028 (0.178885) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 2}
-1.017916 (0.149699) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 3}
-0.655606 (0.472994) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 4}
-5.092675 (7.081534) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 1}
-0.737008 (0.565417) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 2}
-0.655595 (0.454984) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 3}
-0.636408 (0.467380) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 4}
-2.057722 (1.738266) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 1}
-0.915742 (0.137401) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 2}
-1.385888 (0.207571) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 3}
-0.630692 (0.462856) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 4}
-1.020508 (0.072781) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 1}
-1.000364 (0.214325) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 2}
-1.054489 (0.193212) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 3}
-0.629908 (0.467586) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 4}
-0.756025 (0.544006) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 1}
-0.442422 (0.433070) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 2}
-0.620283 (0.469933) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 3}
-0.650653 (0.449245) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 4}
-1.265691 (0.989727) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 1}
-0.891685 (0.046631) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 2}
-1.114148 (0.398675) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 3}
-0.595309 (0.473384) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 4}
-1.080310 (0.190336) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 1}
-1.034929 (0.261303) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 2}
-1.096316 (0.381655) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 3}
-0.575263 (0.472514) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 4}
/usr/local/lib/python3.6/dist-packages/sklearn/externals/joblib/externals/loky/process_executor.py:706: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  "timeout or by a memory leak.", UserWarning
/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_search.py:841: DeprecationWarning: The default of the `iid` parameter will change from True to False in version 0.22 and will be removed in 0.24. This will change numeric results when test-set sizes are unequal.
  DeprecationWarning)
Restoring model weights from the end of the best epoch
Epoch 00105: early stopping
Best: -0.263932 using {'init_neurons': 16, 'learn': 0.1, 'n_layers': 3}
-0.482069 (0.383065) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 1}
-0.541302 (0.302670) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 2}
-0.263932 (0.140085) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 3}
-144.592648 (190.038172) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 4}
-2.794084 (3.071906) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 1}
-1.436729 (1.220673) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 2}
-0.439615 (0.274953) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 3}
-0.536866 (0.359577) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 4}
-2.060975 (2.147831) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 1}
-0.408292 (0.274458) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 2}
-1.415689 (1.587221) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 3}
-0.387802 (0.228707) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 4}
-52.391125 (68.766165) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 1}
-0.546440 (0.478452) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 2}
-167.469088 (272.345071) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 3}
-21.804257 (28.282474) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 4}
-1.191676 (0.914771) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 1}
-0.479081 (0.316379) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 2}
-0.482092 (0.212683) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 3}
-0.409875 (0.245612) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 4}
-2.834407 (2.379527) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 1}
-2.690258 (2.982250) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 2}
-1.076599 (0.827483) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 3}
-0.466279 (0.231312) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 4}
-32.417394 (19.299308) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 1}
-3795.799292 (5020.500742) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 2}
-0.337674 (0.267495) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 3}
-7465.524916 (9875.462183) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 4}
-5.606249 (5.607074) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 1}
-0.473791 (0.238726) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 2}
-0.432892 (0.265526) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 3}
-0.522642 (0.224503) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 4}
-2.113094 (2.395614) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 1}
-0.630323 (0.328432) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 2}
-0.958704 (0.760414) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 3}
-0.524806 (0.294794) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 4}
-0.899096 (0.718758) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 1}
-0.705642 (0.449139) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 2}
-14831.427238 (19619.047766) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 3}
-78002.287052 (103186.496030) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 4}
-0.807001 (0.636355) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 1}
-0.527233 (0.305806) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 2}
-0.547579 (0.188554) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 3}
-0.404832 (0.235673) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 4}
-10.490819 (11.433468) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 1}
-0.642093 (0.430026) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 2}
-1.120316 (1.019921) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 3}
-0.530757 (0.355055) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 4}
/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_search.py:841: DeprecationWarning: The default of the `iid` parameter will change from True to False in version 0.22 and will be removed in 0.24. This will change numeric results when test-set sizes are unequal.
  DeprecationWarning)
Restoring model weights from the end of the best epoch
Epoch 00452: early stopping
Best: -0.384447 using {'init_neurons': 64, 'learn': 0.1, 'n_layers': 4}
-0.591719 (0.092632) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 1}
-0.410745 (0.255383) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 2}
-0.613096 (0.191781) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 3}
-0.433300 (0.242752) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 4}
-0.424118 (0.291050) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 1}
-0.466205 (0.296919) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 2}
-0.443336 (0.282896) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 3}
-0.475379 (0.223719) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 4}
-0.524547 (0.388538) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 1}
-0.562000 (0.152033) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 2}
-0.856100 (0.610421) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 3}
-0.668789 (0.375235) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 4}
-0.493626 (0.224831) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 1}
-0.796982 (0.203170) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 2}
-0.503393 (0.280573) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 3}
-0.489630 (0.237966) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 4}
-0.667399 (0.145540) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 1}
-0.503332 (0.346414) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 2}
-0.480658 (0.313422) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 3}
-0.489819 (0.119391) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 4}
-0.521690 (0.361052) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 1}
-0.796136 (0.400577) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 2}
-0.495020 (0.223668) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 3}
-0.525759 (0.261974) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 4}
-0.475574 (0.201160) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 1}
-0.634539 (0.139709) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 2}
-0.651900 (0.332693) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 3}
-0.524071 (0.390471) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 4}
-0.478529 (0.224433) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 1}
-0.537182 (0.272743) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 2}
-0.481892 (0.307061) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 3}
-0.546858 (0.218764) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 4}
-0.589984 (0.362791) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 1}
-0.657927 (0.412789) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 2}
-0.558807 (0.339129) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 3}
-0.600819 (0.260063) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 4}
-0.670776 (0.131207) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 1}
-0.569732 (0.129632) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 2}
-0.618772 (0.055057) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 3}
-0.384447 (0.206368) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 4}
-0.423414 (0.204710) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 1}
-0.493706 (0.314937) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 2}
-0.461756 (0.302313) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 3}
-0.550626 (0.156295) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 4}
-0.650215 (0.403298) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 1}
-0.967139 (0.511218) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 2}
-0.788780 (0.556878) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 3}
-0.745722 (0.123633) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 4}
/usr/local/lib/python3.6/dist-packages/sklearn/externals/joblib/externals/loky/process_executor.py:706: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  "timeout or by a memory leak.", UserWarning
/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_search.py:841: DeprecationWarning: The default of the `iid` parameter will change from True to False in version 0.22 and will be removed in 0.24. This will change numeric results when test-set sizes are unequal.
  DeprecationWarning)
Restoring model weights from the end of the best epoch
Epoch 00118: early stopping
Best: -0.330417 using {'init_neurons': 16, 'learn': 0.1, 'n_layers': 2}
-0.412679 (0.248070) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 1}
-0.330417 (0.195545) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 2}
-0.544218 (0.354289) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 3}
-0.457562 (0.273995) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 4}
-30842.053258 (50363.880358) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 1}
-0.488557 (0.254717) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 2}
-0.384193 (0.187706) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 3}
-0.506130 (0.343136) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 4}
-438390.530807 (715806.546041) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 1}
-157755136.354209 (257613057.433511) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 2}
-10469826.260318 (17097149.776273) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 3}
-0.365577 (0.229212) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 4}
-1513914.967922 (2472154.095266) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 1}
-6243.472631 (10194.846055) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 2}
-2.427225 (2.828960) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 3}
-2582219.925553 (4216746.646169) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 4}
-457816369.260607 (747610986.428703) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 1}
-0.474741 (0.282546) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 2}
-10247.773995 (16733.675608) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 3}
-0.520168 (0.357937) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 4}
-835019695.963269 (1363581438.921122) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 1}
-140388080.587851 (229252772.581097) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 2}
-312510.699107 (510320.169420) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 3}
-10734730.435460 (17529740.761586) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 4}
-4122714.868042 (6732325.071943) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 1}
-0.703895 (0.406968) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 2}
-1785811.436001 (2916216.868915) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 3}
-11.389411 (14.368855) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 4}
-38563.815803 (62966.294311) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 1}
-82220.155791 (134263.839431) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 2}
-44146.136825 (72089.567395) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 3}
-0.388574 (0.207344) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 4}
-74707246.051019 (121996365.677882) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 1}
-146692575.301338 (239547968.088547) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 2}
-89902081.791756 (146809483.254692) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 3}
-45763230.260097 (74731040.813344) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 4}
-48869793.385784 (79800433.044260) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 1}
-0.570538 (0.257562) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 2}
-0.383256 (0.243304) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 3}
-0.371816 (0.227602) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 4}
-698130.748963 (1140036.563016) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 1}
-1192937.106321 (1948057.316820) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 2}
-341037.662582 (556911.314718) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 3}
-7.079987 (8.995596) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 4}
-207404041.593561 (338689352.040768) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 1}
-16109013.700845 (26305798.915533) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 2}
-12087531.828177 (19738853.164903) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 3}
-220123.310195 (359458.818137) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 4}
/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_search.py:841: DeprecationWarning: The default of the `iid` parameter will change from True to False in version 0.22 and will be removed in 0.24. This will change numeric results when test-set sizes are unequal.
  DeprecationWarning)
Restoring model weights from the end of the best epoch
Epoch 00247: early stopping
Best: -0.256861 using {'init_neurons': 16, 'learn': 0.001, 'n_layers': 1}
-0.334232 (0.189336) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 1}
-0.510946 (0.302102) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 2}
-0.404562 (0.133419) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 3}
-0.384826 (0.192244) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 4}
-0.373343 (0.048983) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 1}
-0.525584 (0.205819) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 2}
-0.385742 (0.073322) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 3}
-0.381003 (0.227674) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 4}
-0.256861 (0.149293) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 1}
-0.589331 (0.205724) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 2}
-0.314475 (0.127403) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 3}
-0.345555 (0.204329) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 4}
-0.305082 (0.184830) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 1}
-0.294141 (0.160663) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 2}
-0.355987 (0.144436) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 3}
-0.409209 (0.166731) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 4}
-0.422197 (0.025778) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 1}
-0.338362 (0.129507) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 2}
-0.538267 (0.235170) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 3}
-0.328722 (0.190134) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 4}
-0.544188 (0.145240) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 1}
-0.505484 (0.093740) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 2}
-0.803285 (0.646572) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 3}
-0.309513 (0.181048) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 4}
-0.634217 (0.386948) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 1}
-0.406610 (0.207553) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 2}
-0.412099 (0.121476) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 3}
-0.405244 (0.213490) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 4}
-0.508517 (0.082188) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 1}
-0.319346 (0.133226) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 2}
-0.883520 (0.798058) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 3}
-0.325800 (0.129937) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 4}
-0.379649 (0.174361) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 1}
-0.739385 (0.606256) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 2}
-0.374401 (0.068685) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 3}
-0.308181 (0.181052) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 4}
-0.436644 (0.021414) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 1}
-0.436220 (0.251519) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 2}
-0.371379 (0.184637) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 3}
-0.444719 (0.251490) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 4}
-0.396625 (0.101723) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 1}
-0.319835 (0.132246) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 2}
-0.560865 (0.238124) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 3}
-0.388995 (0.121045) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 4}
-0.618103 (0.136077) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 1}
-0.593022 (0.314221) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 2}
-0.283901 (0.171398) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 3}
-0.354530 (0.074129) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 4}
/usr/local/lib/python3.6/dist-packages/sklearn/externals/joblib/externals/loky/process_executor.py:706: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  "timeout or by a memory leak.", UserWarning
/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_search.py:841: DeprecationWarning: The default of the `iid` parameter will change from True to False in version 0.22 and will be removed in 0.24. This will change numeric results when test-set sizes are unequal.
  DeprecationWarning)
Restoring model weights from the end of the best epoch
Epoch 00433: early stopping
Best: -0.191524 using {'init_neurons': 16, 'learn': 0.01, 'n_layers': 2}
-0.344434 (0.264215) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 1}
-229638.515444 (303782.770644) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 2}
-0.323657 (0.247838) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 3}
-23705158.000528 (38710360.219841) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 4}
-71555.423970 (116028.461194) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 1}
-0.191524 (0.178982) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 2}
-0.277625 (0.283325) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 3}
-0.262577 (0.286737) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 4}
-234831.298533 (202960.860555) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 1}
-0.233542 (0.212919) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 2}
-356.779719 (471.444806) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 3}
-0.300695 (0.305535) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 4}
-0.317795 (0.365025) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 1}
-0.501147 (0.596088) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 2}
-0.435151 (0.292192) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 3}
-328778.612417 (434932.720470) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 4}
-2221.540050 (3175.300104) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 1}
-0.326188 (0.296532) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 2}
-0.291879 (0.326974) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 3}
-0.294523 (0.323418) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 4}
-2076777.322425 (2799921.550785) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 1}
-710541.517192 (1159265.641913) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 2}
-11715117.165875 (13163279.690280) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 3}
-0.493694 (0.560341) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 4}
-1162.343153 (1584.908796) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 1}
-0.413481 (0.294159) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 2}
-0.203071 (0.200968) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 3}
-4186087.397575 (5537672.376029) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 4}
-11426.477304 (17243.953867) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 1}
-824.381382 (775.385543) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 2}
-0.287841 (0.295280) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 3}
-0.291036 (0.280863) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 4}
-9810332.147032 (14911660.121375) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 1}
-7899.909968 (10450.254550) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 2}
-626543.642737 (1023140.897580) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 3}
-0.261212 (0.276687) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 4}
-1.936340 (2.492202) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 1}
-0.542551 (0.445624) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 2}
-0.372318 (0.433111) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 3}
-0.206135 (0.218187) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 4}
-1654.067024 (1248.365772) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 1}
-1210.612023 (1372.669036) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 2}
-0.280987 (0.278090) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 3}
-0.396698 (0.466462) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 4}
-19201778.212260 (30624726.522779) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 1}
-6229339.514724 (5136451.128678) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 2}
-404785.545386 (528182.785649) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 3}
-0.262705 (0.277492) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 4}
/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_search.py:841: DeprecationWarning: The default of the `iid` parameter will change from True to False in version 0.22 and will be removed in 0.24. This will change numeric results when test-set sizes are unequal.
  DeprecationWarning)
Restoring model weights from the end of the best epoch
Epoch 00183: early stopping
Best: -0.162278 using {'init_neurons': 16, 'learn': 0.01, 'n_layers': 1}
-0.263324 (0.168094) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 1}
-0.222290 (0.187927) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 2}
-0.347512 (0.170707) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 3}
-0.191234 (0.217444) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 4}
-0.162278 (0.203919) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 1}
-0.168763 (0.199038) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 2}
-0.193343 (0.188189) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 3}
-0.336360 (0.257648) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 4}
-0.185273 (0.233966) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 1}
-0.175960 (0.194285) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 2}
-0.284829 (0.206702) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 3}
-0.173475 (0.209521) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 4}
-0.165231 (0.203526) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 1}
-0.162892 (0.153514) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 2}
-0.254310 (0.174301) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 3}
-0.207943 (0.221405) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 4}
-0.205956 (0.261751) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 1}
-0.172494 (0.197779) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 2}
-0.214446 (0.186477) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 3}
-0.173981 (0.201779) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 4}
-0.168396 (0.202893) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 1}
-0.200237 (0.194127) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 2}
-0.173997 (0.200524) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 3}
-0.168068 (0.203596) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 4}
-0.170578 (0.215245) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 1}
-0.335570 (0.324350) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 2}
-0.235061 (0.158261) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 3}
-0.226441 (0.225025) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 4}
-0.163549 (0.204592) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 1}
-0.218047 (0.172741) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 2}
-0.175005 (0.195173) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 3}
-0.232923 (0.215598) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 4}
-0.186703 (0.236461) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 1}
-0.338111 (0.094449) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 2}
-0.233981 (0.156500) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 3}
-0.241907 (0.154166) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 4}
-0.175126 (0.199714) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 1}
-0.409102 (0.146608) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 2}
-0.453311 (0.279398) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 3}
-0.226509 (0.216112) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 4}
-0.169066 (0.200946) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 1}
-0.169248 (0.203619) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 2}
-0.188809 (0.189042) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 3}
-0.231793 (0.195262) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 4}
-0.202760 (0.248443) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 1}
-0.334516 (0.200292) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 2}
-0.170706 (0.212582) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 3}
-0.259729 (0.192039) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 4}
/usr/local/lib/python3.6/dist-packages/sklearn/externals/joblib/externals/loky/process_executor.py:706: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  "timeout or by a memory leak.", UserWarning
/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_search.py:841: DeprecationWarning: The default of the `iid` parameter will change from True to False in version 0.22 and will be removed in 0.24. This will change numeric results when test-set sizes are unequal.
  DeprecationWarning)
Restoring model weights from the end of the best epoch
Epoch 00372: early stopping
Best: -0.043781 using {'init_neurons': 16, 'learn': 0.001, 'n_layers': 3}
-1461.717943 (1933.637312) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 1}
-1751.272574 (2316.523416) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 2}
-0.276648 (0.326805) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 3}
-0.070669 (0.010240) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 4}
-40939.186588 (66853.329089) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 1}
-4327.681034 (5717.103048) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 2}
-14073.615617 (17138.523149) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 3}
-0.060135 (0.071700) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 4}
-465757.428914 (285734.848625) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 1}
-19281.932829 (25440.777996) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 2}
-0.043781 (0.038513) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 3}
-0.079558 (0.096918) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 4}
-1699756.597820 (2775690.470332) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 1}
-0.182469 (0.074232) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 2}
-0.062467 (0.042990) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 3}
-0.184713 (0.197217) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 4}
-3723.215217 (4681.957090) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 1}
-45.063714 (59.599964) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 2}
-0.049466 (0.056095) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 3}
-0.405128 (0.519903) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 4}
-393184.406393 (443050.443348) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 1}
-3999.045868 (6530.315122) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 2}
-45704.173028 (67840.094092) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 3}
-0.062640 (0.042890) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 4}
-412817.317912 (674127.698046) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 1}
-11105.514702 (14691.070127) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 2}
-8521369571.169210 (11272712357.339569) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 3}
-0.076039 (0.049069) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 4}
-42979.532655 (69052.375576) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 1}
-45.564389 (60.267619) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 2}
-3.650635 (4.824404) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 3}
-0.165787 (0.212945) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 4}
-3725363.682215 (4700850.274150) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 1}
-72535.868010 (115717.280172) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 2}
-153840.360642 (202039.306070) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 3}
-106535.682306 (171731.529986) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 4}
-13.788935 (18.229351) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 1}
-0.086656 (0.050909) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 2}
-37776989100.234833 (49974259219.929886) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 3}
-42404268.660982 (69245880.532564) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 4}
-18347.896136 (29543.732114) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 1}
-21965.488441 (29057.469403) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 2}
-57860.322717 (76527.759132) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 3}
-0.048667 (0.057761) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 4}
-12173856.870646 (15239839.809079) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 1}
-74257.616693 (119273.675477) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 2}
-59742.017408 (84805.743928) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 3}
-41912.873372 (55445.428675) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 4}
/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_search.py:841: DeprecationWarning: The default of the `iid` parameter will change from True to False in version 0.22 and will be removed in 0.24. This will change numeric results when test-set sizes are unequal.
  DeprecationWarning)
Restoring model weights from the end of the best epoch
Epoch 00236: early stopping
Best: -0.027624 using {'init_neurons': 64, 'learn': 0.01, 'n_layers': 1}
-0.041822 (0.038070) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 1}
-0.036025 (0.036323) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 2}
-0.054244 (0.037741) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 3}
-0.039290 (0.031967) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 4}
-0.043328 (0.044996) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 1}
-0.054021 (0.036308) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 2}
-0.040587 (0.037405) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 3}
-0.035511 (0.038481) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 4}
-0.050611 (0.037456) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 1}
-0.031734 (0.018461) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 2}
-0.162953 (0.184973) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 3}
-0.039265 (0.036645) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 4}
-0.039077 (0.043990) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 1}
-0.048083 (0.030242) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 2}
-0.034835 (0.026102) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 3}
-0.080775 (0.026010) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 4}
-0.064084 (0.075585) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 1}
-0.037567 (0.037643) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 2}
-0.039719 (0.041471) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 3}
-0.046967 (0.036207) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 4}
-0.071716 (0.086337) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 1}
-0.044594 (0.034201) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 2}
-0.058326 (0.034859) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 3}
-0.038118 (0.038928) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 4}
-0.064979 (0.041137) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 1}
-0.049672 (0.033326) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 2}
-0.048805 (0.049212) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 3}
-0.044027 (0.031173) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 4}
-0.038162 (0.034421) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 1}
-0.058584 (0.034822) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 2}
-0.035896 (0.037285) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 3}
-0.039307 (0.034729) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 4}
-0.033594 (0.037775) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 1}
-0.109775 (0.074289) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 2}
-0.135635 (0.016338) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 3}
-0.036484 (0.030553) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 4}
-0.030685 (0.028199) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 1}
-0.147566 (0.105077) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 2}
-0.038234 (0.036348) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 3}
-0.100384 (0.093164) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 4}
-0.027624 (0.026541) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 1}
-0.040786 (0.033322) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 2}
-0.046041 (0.033782) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 3}
-0.033685 (0.037461) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 4}
-0.051586 (0.059102) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 1}
-0.212365 (0.087391) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 2}
-0.055834 (0.049313) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 3}
-0.084824 (0.060905) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 4}
/usr/local/lib/python3.6/dist-packages/sklearn/externals/joblib/externals/loky/process_executor.py:706: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  "timeout or by a memory leak.", UserWarning
/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_search.py:841: DeprecationWarning: The default of the `iid` parameter will change from True to False in version 0.22 and will be removed in 0.24. This will change numeric results when test-set sizes are unequal.
  DeprecationWarning)
Restoring model weights from the end of the best epoch
Epoch 00149: early stopping
Best: -0.005787 using {'init_neurons': 48, 'learn': 0.01, 'n_layers': 4}
-0.015380 (0.004004) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 1}
-0.036357 (0.017010) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 2}
-0.025656 (0.010804) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 3}
-0.125694 (0.045957) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 4}
-1759.487819 (1079.742662) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 1}
-0.010703 (0.001137) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 2}
-0.013644 (0.009890) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 3}
-0.009571 (0.002502) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 4}
-1024809.086125 (1004356.564405) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 1}
-485824.522082 (617583.614409) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 2}
-1574.493429 (2082.837240) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 3}
-0.009138 (0.004557) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 4}
-81777.446824 (103094.597576) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 1}
-0.027820 (0.006926) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 2}
-0.163899 (0.138812) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 3}
-0.129848 (0.034044) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 4}
-3757.526641 (1323.035916) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 1}
-9.236667 (11.332828) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 2}
-0.007177 (0.003408) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 3}
-0.007540 (0.002843) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 4}
-15497497.577574 (19293202.447366) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 1}
-24576.650247 (23230.553661) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 2}
-0.008358 (0.004359) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 3}
-0.012730 (0.010226) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 4}
-3770703.256583 (4988171.532059) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 1}
-0.076241 (0.083767) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 2}
-0.076168 (0.048677) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 3}
-12015818.857394 (15895434.224899) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 4}
-18916.911462 (8399.797820) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 1}
-0.006609 (0.003160) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 2}
-2.709252 (3.568480) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 3}
-0.005787 (0.003010) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 4}
-31806828.766118 (41090849.644518) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 1}
-6012.721318 (4858.738153) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 2}
-5970.012297 (5945.719512) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 3}
-0.008120 (0.003397) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 4}
-19498.509180 (25794.082368) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 1}
-0.094148 (0.071654) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 2}
-0.018286 (0.008153) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 3}
-0.242871 (0.152878) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 4}
-21374.272700 (15112.644981) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 1}
-1.479055 (1.942469) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 2}
-1.170597 (1.534433) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 3}
-0.006902 (0.001444) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 4}
-1982496.002491 (2049488.765638) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 1}
-2308352.602041 (2650626.684896) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 2}
-26474.552034 (24943.491550) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 3}
-126780.978471 (167715.458756) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 4}
/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_search.py:841: DeprecationWarning: The default of the `iid` parameter will change from True to False in version 0.22 and will be removed in 0.24. This will change numeric results when test-set sizes are unequal.
  DeprecationWarning)
Restoring model weights from the end of the best epoch
Epoch 00157: early stopping
Best: -0.005762 using {'init_neurons': 64, 'learn': 0.1, 'n_layers': 1}
-0.009611 (0.003872) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 1}
-0.034831 (0.044150) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 2}
-0.008183 (0.004135) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 3}
-0.008991 (0.004089) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 4}
-0.008640 (0.004223) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 1}
-0.034719 (0.034413) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 2}
-0.089217 (0.110079) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 3}
-0.009076 (0.003991) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 4}
-0.009392 (0.004594) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 1}
-0.036339 (0.033072) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 2}
-0.009420 (0.003021) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 3}
-0.008898 (0.004041) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 4}
-0.012348 (0.002711) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 1}
-0.123428 (0.060721) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 2}
-0.035599 (0.035522) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 3}
-0.009380 (0.005259) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 4}
-0.009689 (0.005108) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 1}
-0.056405 (0.079483) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 2}
-0.010324 (0.005069) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 3}
-0.013241 (0.002988) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 4}
-0.009968 (0.004865) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 1}
-0.106859 (0.125547) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 2}
-0.082350 (0.116431) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 3}
-0.011177 (0.006235) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 4}
-0.006925 (0.002599) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 1}
-0.017183 (0.007960) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 2}
-0.072765 (0.066203) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 3}
-0.013218 (0.007370) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 4}
-0.011341 (0.002186) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 1}
-0.036746 (0.034491) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 2}
-0.008907 (0.002866) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 3}
-0.016498 (0.006898) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 4}
-0.011718 (0.002178) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 1}
-0.031290 (0.020882) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 2}
-0.016108 (0.009131) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 3}
-0.044968 (0.030342) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 4}
-0.005762 (0.001827) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 1}
-0.043739 (0.047047) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 2}
-0.069115 (0.060679) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 3}
-0.012032 (0.003335) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 4}
-0.012473 (0.003181) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 1}
-0.008175 (0.003140) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 2}
-0.029791 (0.028364) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 3}
-0.012417 (0.004573) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 4}
-0.008364 (0.003723) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 1}
-0.299275 (0.196477) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 2}
-0.082266 (0.059183) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 3}
-0.009047 (0.005386) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 4}
/usr/local/lib/python3.6/dist-packages/sklearn/externals/joblib/externals/loky/process_executor.py:706: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  "timeout or by a memory leak.", UserWarning
/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_search.py:841: DeprecationWarning: The default of the `iid` parameter will change from True to False in version 0.22 and will be removed in 0.24. This will change numeric results when test-set sizes are unequal.
  DeprecationWarning)
Restoring model weights from the end of the best epoch
Epoch 00122: early stopping
Best: -0.009801 using {'init_neurons': 48, 'learn': 0.01, 'n_layers': 4}
-265145.205490 (350754.110003) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 1}
-0.055288 (0.051810) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 2}
-442635.309526 (585551.424726) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 3}
-119315.751612 (157839.798511) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 4}
-2572.548112 (2652.621779) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 1}
-165.377059 (218.762288) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 2}
-0.015367 (0.007954) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 3}
-0.037270 (0.043036) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 4}
-28076464.686598 (37130831.486429) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 1}
-10115.906634 (11178.300732) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 2}
-0.337900 (0.422549) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 3}
-1732.117998 (2828.505623) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 4}
-0.279192 (0.424220) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 1}
-305823939.195641 (499408401.385023) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 2}
-50554561.524697 (66877398.682413) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 3}
-0.131787 (0.085091) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 4}
-1297.609085 (1648.159451) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 1}
-8.899438 (11.759882) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 2}
-0.021814 (0.013061) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 3}
-0.049142 (0.036828) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 4}
-9976801.839708 (15009186.760392) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 1}
-110555.625000 (146251.326920) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 2}
-393807.031391 (520787.258470) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 3}
-41806.260599 (68268.300788) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 4}
-85743.584910 (113427.392817) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 1}
-0.114672 (0.108820) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 2}
-0.014990 (0.007758) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 3}
-20534.363155 (27163.752525) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 4}
-7468.616422 (9060.390107) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 1}
-115.526941 (188.642144) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 2}
-0.019232 (0.007392) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 3}
-0.009801 (0.005134) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 4}
-6154942.735586 (7743467.869283) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 1}
-636.420784 (841.890103) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 2}
-272474.114481 (444948.337656) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 3}
-0.014898 (0.010243) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 4}
-0.014086 (0.008310) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 1}
-648638.706014 (858067.989642) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 2}
-0.020565 (0.017178) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 3}
-0.085179 (0.044770) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 4}
-2392.991231 (1794.996479) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 1}
-0.019033 (0.005542) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 2}
-122.991571 (162.687486) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 3}
-0.015833 (0.010641) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 4}
-2953865.390179 (3766955.156559) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 1}
-48470.287815 (63536.101032) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 2}
-76419.169385 (58908.141449) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 3}
-12759.522675 (8371.664657) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 4}
/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_search.py:841: DeprecationWarning: The default of the `iid` parameter will change from True to False in version 0.22 and will be removed in 0.24. This will change numeric results when test-set sizes are unequal.
  DeprecationWarning)
Restoring model weights from the end of the best epoch
Epoch 00265: early stopping
Best: -0.007283 using {'init_neurons': 64, 'learn': 0.001, 'n_layers': 3}
-0.013826 (0.004302) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 1}
-0.020393 (0.011143) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 2}
-0.012226 (0.002051) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 3}
-0.017577 (0.006725) with: {'init_neurons': 16, 'learn': 0.1, 'n_layers': 4}
-0.017885 (0.007049) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 1}
-0.009728 (0.006288) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 2}
-0.030515 (0.024369) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 3}
-0.042062 (0.039258) with: {'init_neurons': 16, 'learn': 0.01, 'n_layers': 4}
-0.015636 (0.003949) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 1}
-0.019709 (0.011792) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 2}
-0.020381 (0.009706) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 3}
-0.015994 (0.006590) with: {'init_neurons': 16, 'learn': 0.001, 'n_layers': 4}
-0.021848 (0.005364) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 1}
-0.032873 (0.018987) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 2}
-0.016649 (0.005417) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 3}
-0.035132 (0.023130) with: {'init_neurons': 32, 'learn': 0.1, 'n_layers': 4}
-0.011044 (0.005352) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 1}
-0.014762 (0.006616) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 2}
-0.021535 (0.010814) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 3}
-0.016339 (0.007285) with: {'init_neurons': 32, 'learn': 0.01, 'n_layers': 4}
-0.023638 (0.018679) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 1}
-0.022038 (0.008883) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 2}
-0.016705 (0.005109) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 3}
-0.017105 (0.009001) with: {'init_neurons': 32, 'learn': 0.001, 'n_layers': 4}
-0.030437 (0.001885) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 1}
-0.226575 (0.209185) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 2}
-0.015748 (0.009975) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 3}
-0.011157 (0.002327) with: {'init_neurons': 48, 'learn': 0.1, 'n_layers': 4}
-0.017149 (0.006269) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 1}
-0.016162 (0.004070) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 2}
-0.015855 (0.004378) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 3}
-0.019397 (0.001021) with: {'init_neurons': 48, 'learn': 0.01, 'n_layers': 4}
-0.020895 (0.013071) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 1}
-0.034496 (0.030119) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 2}
-0.026574 (0.024416) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 3}
-0.052177 (0.051818) with: {'init_neurons': 48, 'learn': 0.001, 'n_layers': 4}
-0.019868 (0.008131) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 1}
-0.596703 (0.735737) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 2}
-0.023573 (0.015987) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 3}
-0.030990 (0.019103) with: {'init_neurons': 64, 'learn': 0.1, 'n_layers': 4}
-0.019247 (0.005006) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 1}
-0.015750 (0.006832) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 2}
-0.041802 (0.023832) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 3}
-0.018104 (0.006058) with: {'init_neurons': 64, 'learn': 0.01, 'n_layers': 4}
-0.033969 (0.030235) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 1}
-0.135131 (0.057271) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 2}
-0.007283 (0.002256) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 3}
-0.053892 (0.046631) with: {'init_neurons': 64, 'learn': 0.001, 'n_layers': 4}
/usr/local/lib/python3.6/dist-packages/sklearn/externals/joblib/externals/loky/process_executor.py:706: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  "timeout or by a memory leak.", UserWarning
